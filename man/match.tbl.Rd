% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helperMisc.R
\name{match.tbl}
\alias{match.tbl}
\title{Match Table}
\usage{
\method{match}{tbl}(ref, tbl.ref, tbl.val, exact = FALSE)
}
\arguments{
\item{ref}{a vector of reference values to lookup}

\item{tbl.ref}{reference values in the table to be matched to \code{ref}}

\item{tbl.val}{values to be retrieved from the table when found in association with \code{tbl.ref}}

\item{exact}{logical, default FALSE; if TRUE, matches of \code{ref} to \code{tbl.ref} needn't be exact}
}
\value{
A data.table with 4 columns:  
\tabular{rlll}{
 [,1] \tab ref \tab \code{class(ref)} \tab the reference value\cr
 [,2] \tab val \tab \code{class(val)} \tab the value from the table (usually this is the desired output)\cr
 [,3] \tab val.src \tab character \tab the source of the match\cr
 [,4] \tab tbl.row \tab integer \tab Row of match in the table\cr
}
}
\description{
Find (via potentially fuzzy matching) values in a table given a lookup reference
}
\details{
When \code{exact=FALSE}, \code{match.tbl} performs a \code{\link{match}}, with the added utility of returning a value in the table (rather than simply the index of the matches). When \code{exact=TRUE}, functions in \code{\link{cull}} are called to reformat \code{ref} and search for a match. If not match is found still, then fuzzy matching is performed via \code{\link{agrep}} on versions of ref that have and have not been formatted via \code{\link{cull}}.

The values of \code{val.src} indicate the amount of fuzziness involved in the match:
\tabular{ll}{
m1 \tab an exact match\cr
m2 \tab exact match after \code{\link{cull}}\cr
m3 \tab fuzzy match performed on ref\cr
m4 \tab fuzzy match performed on \code{cull(ref)}
}
Fuzzy matching performed with \code{\link{agrep}}, with arguments \code{ignore.case=TRUE, max.distance=0.25}.
}
\section{Warning}{

I am suspicous that the values returned in \code{tbl.ref} may be inaccurate. However, this quality, and the function in general, has not been thoroughly tested. Although use-cases have given desirable results, albeit I think that the fuzzy matching can be a bit too fuzzy (finding matches where there shouldn't be any). Be aware.
}
\examples{
library(data.table)
tbl <- data.table(animal=c(
	"cats",
	"dogs",
	"elephant",
	"giraffe",
	"monkey",
	"person",
	"Gadus morhua",
	"Paralichthys dentatus",
	"Pomatomus saltatrix",
	"Amphiprioninae"
), a=1:10, b=10:1)
ref <- c(
	"GADUS MORHUA",
	"Amphiprion (the computer)",
	"elehpant",
	"dogs",
	"squirrel",
	"gaus"
)
tbl.ref <- tbl[,animal]
match.tbl(ref, tbl.ref, tbl[,animal]) # return what was matched to
match.tbl(ref, tbl.ref, tbl[,a]) # return another column

}

